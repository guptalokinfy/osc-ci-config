<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>20</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>master</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>Java 8.121</jdk>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>osc-image-format</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>cd /var/tmp/osc-tools/revert-snapshot/revert-clean

java -jar target/revert-snapshot.jar  config-ocata.json

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>. /etc/profile.d/proxy.sh


# =============== deploy OSC for Ocata from master ===================

outputDir=/var/www/vsc-builds/container/
echo outputDir $outputDir
buildVersion=`ls -t $outputDir | awk &apos;NR=1&apos; | head -1`
echo buildVersion $buildVersion
VSPHERE_SDK_URL=https://10.3.240.201/sdk
VSPHERE_IP=10.3.240.201:9443
VSPHERE_USER=&apos;Administrator@vsphere.local&apos;
VSPHERE_PASSWORD=&apos;Admin!23&apos;
ESXI_HOST_IP=10.3.242.124
DATASTORE_NAME=&apos;datatstore1&apos;
NETWORK_NAME=&apos;VM Network&apos;
echo -outputDir-buildVersion $outputDir$buildVersion
OVF_NAME=`ls $outputDir$buildVersion | grep .tar | tr -d &apos;\r&apos; | tr -d &apos;\n&apos;`
OVF_PATH=$outputDir$buildVersion/$OVF_NAME
echo $OVF_PATH
#OSC_VM_NAME=`echo $OVF_NAME | cut -f 1 -d &apos;.&apos;`
OSC_VM_NAME=CI_OSC-241-211
OSC_VM_NETMASK=255.255.252.0
OSC_VM_GATEWAY=10.3.243.251
OSC_VM_DNS=10.3.86.116
OSC_VM_IP=10.3.241.211
DATA_CENTER=&apos;Physical Datacenter&apos;
HOST=10.3.242.124

#java -jar /var/tmp/deploy-ovf.jar $VSPHERE_SDK_URL &quot;$VSPHERE_USER&quot; &quot;$VSPHERE_PASSWORD&quot; $ESXI_HOST_IP $OVF_PATH $OSC_VM_NAME &quot;$DATASTORE_NAME&quot; &quot;$NETWORK_NAME&quot; $OSC_VM_IP $OSC_VM_NETMASK $OSC_VM_GATEWAY $OSC_VM_DNS
##Use a unique Docker server 10.3.242.16 and ssh to it without password:
#ssh -l ubuntu 10.3.242.16
##Use scp without password input, the scppass to get the tar file:
sshpass -p &quot;admin123&quot; scp $OVF_PATH ubuntu@10.3.242.16:/home/ubuntu/.

numContainers=`ssh ubuntu@10.3.242.16 docker ps | grep osc-docker-image | wc -l`
echo ${numContainers}
    
if [ &quot;${numContainers}&quot; = &quot;0&quot; ]
then
	echo nothing to delete
else
	echo deleting containers
    ssh ubuntu@10.3.242.16 docker stop `ssh ubuntu@10.3.242.16 docker ps -a -q`
fi


ssh ubuntu@10.3.242.16 docker load -i osc-docker.tar

ssh ubuntu@10.3.242.16 docker run -p 443:443 -p 8090:8090 -dit --mount source=osc-vol,target=/opt/vmidc/bin/data osc-docker-image:osc

sleep 240


python3 /var/tmp/osc-tools/check-openstack-health/check-ocata-health.py
echo $?

exit 0</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command></command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.20">
      <recipients>yaron.choma@intel.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>